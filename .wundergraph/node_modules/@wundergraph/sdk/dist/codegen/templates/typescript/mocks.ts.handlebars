import { {{ modelImports }} } from "./models"

export interface {{applicationName}}MockConfig {
{{#if hasQueries}}
    queries?: {
    {{#each queries}}
        {{operationName}}?: ({{#if hasInput}}input: {{operationName}}Input{{/if}}) => {{operationName}}Response | undefined;
    {{/each}}
    };
{{else}}
    queries?: {};
{{/if}}
{{#if hasMutations}}
    mutations?: {
        {{#each mutations}}
            {{operationName}}?: ({{#if hasInput}}input: {{operationName}}Input{{/if}}) => {{operationName}}Response | undefined;
        {{/each}}
    };
{{else}}
    mutations?: {};
{{/if}}
{{#if hasSubscriptions}}
    subscriptions?: {
        {{#each subscriptions}}
            {{operationName}}?: ({{#if hasInput}}input: {{operationName}}Input{{/if}}) => {{operationName}}Response | undefined;
        {{/each}}
    };
{{else}}
    subscriptions?: {};
{{/if}}
}

export const {{applicationName}}Mock = (config: {{applicationName}}MockConfig) => {
    return {
        queries: config.queries as { [name: string]: (input: Object) => Object | undefined },
        mutations: config.mutations as { [name: string]: (input: Object) => Object | undefined },
        subscriptions: config.subscriptions as { [name: string]: {pollingIntervalMillis: number, resolver: (input: Object) => Object | undefined } }
    }
}