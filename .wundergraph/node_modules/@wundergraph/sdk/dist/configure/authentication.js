"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.authProviders = exports.OpenIDConnectAuthProvider = exports.GithubAuthProvider = void 0;
const wundernode_config_1 = require("@wundergraph/protobuf/dist/wundernode_config");
class GithubAuthProvider {
    constructor(config) {
        this.config = config;
    }
    resolve() {
        return {
            kind: wundernode_config_1.AuthProviderKind.AuthProviderGithub,
            githubConfig: {
                clientId: this.config.clientId,
                clientSecret: this.config.clientSecret,
            },
            oidcConfig: undefined,
            id: this.config.id,
        };
    }
}
exports.GithubAuthProvider = GithubAuthProvider;
class OpenIDConnectAuthProvider {
    constructor(config) {
        this.config = config;
    }
    resolve() {
        return {
            kind: wundernode_config_1.AuthProviderKind.AuthProviderOIDC,
            githubConfig: undefined,
            oidcConfig: {
                clientId: this.config.clientId,
                clientSecret: this.config.clientSecret,
                issuer: this.config.issuer,
            },
            id: this.config.id,
        };
    }
}
exports.OpenIDConnectAuthProvider = OpenIDConnectAuthProvider;
exports.authProviders = {
    github: (config) => new GithubAuthProvider(config),
    demo: () => new GithubAuthProvider({ id: "github", clientId: "demo", clientSecret: "demo" }),
    openIdConnect: (config) => new OpenIDConnectAuthProvider(config),
    google: (config) => new OpenIDConnectAuthProvider({ ...config, issuer: "https://accounts.google.com" }),
};
